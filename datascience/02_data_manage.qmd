---
title: "数据加工"
  knitr:
  opts_chunk:
  comment: "#>"
collapse: true
---

# data processing

```{r}
leadership<-read_csv("data/leadership.txt") |> column_to_rownames(var = "id")
leadership
```

### 缺失值 missing values

缺失值，NA，Not Available

Not a Number

```{r}
is.na(leadership)
is.nan(0/0)
new<-na.omit(leadership)
new

x<-c(1,2,3,4,5,NA,NA)
mean(x,na.rm = TRUE)
```


### 排序

```{r}
leadership

?order
order(leadership$gender,-leadership$age,na.last = TRUE)  
# 返回原来的行索引 5,3,2,4,1,  原来第5行现在第1行

leadership[order(leadership$gender,-leadership$age,na.last = TRUE) ,]  # 性别升序，年龄降序
```

### 子集和抽样

```{r}
# subset(x,row,select=col)  
base::subset(leadership,age>=18&age<=45,select=c(age,q1:q5))

# 随机抽样 sample(x,size,replace=T/F 有无放回)
set.seed(125)
sample(nrow(leadership),10,replace = T)
leadership[sample(nrow(leadership),10,replace = T),]
samp
```

## 实用函数
```{r}
A <- c(3,4,1,2,5)
all(A>2)
any(A>2)
which(A>4)

substr(x="qwertyyuio",start = 2,stop=4)            #子串
grep(pattern = "v",x=c("a","v","D","A","f","J"),ignore.case = FALSE,fixed = FALSE)   # 查找,返回下标
sub(pattern = " ",replacement = ".",
    x="hello world",ignore.case = FALSE,fixed = FALSE)  #查找替换
strsplit(x="a.fafag",split = ".",fixed = FALSE)  # 分隔

paste("x",c("a","b"),sep="+")   #连接
cat("hello","BOb","\b\n","\bIsn\' R","\t","GREAT?\n",sep = " " )#cat(…,file="my file",append=FALSE)

toupper("abc")              #大写转换
tolower("aaAGEErg")         #小写转换



seq(from=1,to=30,by=3)  # 生成一个序列
seq(from=1,to=30,length=10) 
rep(x = c("A",1,"B",2),times = 3)           #重复
rep(x = c("A",1,"B",2),times = c(1,2,3,4))
rep(x = c("A",1,"B",2),each = 3,times = 2)

?cut
cut( x = 0:10, breaks =3,)                # 因子
cut( x = 0:10, breaks =c(1,2,5,8),include.lowest = TRUE)         

```

```{r}
#分组计算描述性统计量
aggregate(mtcars,by=list(mtcars$am),mean)  #函数为单返回值
by(mtcars,list(am=mtcars$am),summary) #函数为多返回值

```


### 数学函数

```{r}
x<-c(25,-4,3.66,3.42,-5.99)
abs(x)                       #绝对值
sqrt(x)                      #平方根
ceiling(x)                   #向上取整
floor(x)                     #向下取整
trunc(x)                     #整数部分
round(x,digits = 2)          #四舍五入，保留2位小数
signif(x,digits = 2)         #四舍五入，保留2有效数字
log(x,base=4)                #对x取以base为底的对数
log(x)                          #自然对数
log10(x)                        #常用对数
exp(x)                       #e指数函数
```

### 统计函数

```{r}
#| echo: false
conflicts_prefer(dplyr::lag)
```

```{r}
mean(x,trim = 0.05,na.rm = TRUE)     #算术平均值
median(x)                            #中位数
sd(x)                                #标准差
var(x)                               #方差
mad(x)                               #绝对中位差
quantile(x,probs = c(0,0.25,0.5,0.75,1))     #分位数
range(x)                             # 值域
scale(x,center = TRUE,scale = TRUE)  #标准化（均值为0、标准差为1）
scale(x,center = TRUE,scale =FALSE)  #中心化：减去均值

x <- c(1,3,5,7,9,11,13)
stats::lag(x,n=2)                      # n阶滞后
lead(x,n=2)                     # n阶前移

# 滞后差分  lag阶滞后  difference阶差分
diff(x,lag = 1,difference=1)     # 隔0个值后位减前位，进行1次
diff(x,lag = 1,difference=2)     ## 隔0个值后位减前位，进行2次
diff(x,lag = 1,difference=3)     # 隔0个值后位减前位，进行3次

diff(x,lag = 2,difference=1)  # 隔1个值后位减前位，进行1次
diff(x,lag = 2,difference=2) ## 隔1个值后位减前位，进行2次
```

### 概率函数

形如`[dpqr]distribution_abbreviation`，其中密度函数`d`，分布函数`p`，分位数函数`q`，随机数生成函数`r`

```{r}
### 正态分布
dnorm(3,0,2)  #N(0,4)在 3 处的密度值
pnorm(1:3,0,2)#N(0,4)在1，2，3处的分布函数值
qnorm(1-0.025,0,1)#N(0,1)的上0.025分位数
rnorm(5,3,3)  # 生成5个服从N(3,9)的随机数


### 二项分布
1-sum(dbinom(0:1,400,0.02))# 命中率为0.02，独立射击400次，至少击中2次的概率
ggplot()



### 多元正态分布
mean<-c(230.7,146.7,3.6)
sigma<-matrix(c(15360.8,6721.2,-47.1,
                6721.2,4700.9,-16.5,
                -47.1,16.5,0.3),nrow = 3,ncol = 3)
library(MASS)
multi <- mvrnorm(500,mean,sigma)
head(multi)
```

#### 图

```{r}
norm_plot <- function(xlim=c(-5,5)){
  ggplot() + xlim(xlim) +
    geom_function(fun = dnorm,color="red")+
    geom_function(fun = pnorm,color="green")+
    geom_function(fun = qnorm,color="blue")+
    geom_function(fun = rnorm,color="purple")
}
norm_plot(xlim = c(-5,5))

```
