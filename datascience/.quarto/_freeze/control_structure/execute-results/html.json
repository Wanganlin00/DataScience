{
  "hash": "e55bdb5b7913462ab101219dfef8e289",
  "result": {
    "markdown": "---\nknitr: \n  opts_chunk: \n    comment: \"#>>>\"\n    collapse: TRUE\nnumber-sections: true\ncode-fold: show\ncode-link: true\ncode-tools: true\n---\n\n\n# Control structure\n\n## if 语句\n\n### if语句\n\n```         \nif conditional_test1:\n    do something\nif conditional_test2:\n    do something\n......\nif conditional_testn:\n    do something\n```\n\n### if-else 语句\n\n```         \nif conditional_test:\n    do something\nelse:\n    do anotherthing\n```\n\n### if-elif-else 语句\n\n`else:`可省略\n\n```         \nif conditional_test1:\n    do something\nelif conditional_test2:\n    do something\n......\nelif condtional_testn:\n    do something\nelse:\n    do otherthings\n```\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-1_4f02e0192016f4294fb72f2c315d10b7'}\n\n```{.python .cell-code}\ncars = [\"audi\",\"bmW\",\"subaru\",\"toyota\"] \nfor i in cars: \n    if i.lower()=='bmw': \n        i.upper() \n    else: \n        i.title()\n#>>> 'Audi'\n#>>> 'BMW'\n#>>> 'Subaru'\n#>>> 'Toyota'\n```\n:::\n\n\n与 `and`、或`or`\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-2_e72e4eb23bac27efef912ec3b0c6d056'}\n\n```{.python .cell-code}\nages = [17,34,29,18,46,55,9,60,35,14,56,64] \nstate = [] \nfor i in ages: \n    if i <18: \n        state.append(\"young\") \n    elif i>=18 and i<60: \n        state.append(\"adult\") \n    else: \n        state.append(\"elder\") \nstate\n#>>> ['young', 'adult', 'adult', 'adult', 'adult', 'adult', 'young', 'elder', 'adult', 'young', 'adult', 'elder']\n```\n:::\n\n\n在或不在 `in`、`not in`\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-3_10505d05d8f03111a4b7292f7aa2d9f0'}\n\n```{.python .cell-code}\nusers = [\"小米\",\"小亮\",\"小美\",\"小明\",\"小帅\"]\n\nuser1 = \"小美\" \nif user1 in users:\n    print(f\"欢迎光临,{user1}!\")\n#>>> 欢迎光临,小美!\nuser2 = \"小花\"\nif user2 not in users:\n    print(f\"请加入我们，{user2}!\")\n#>>> 请加入我们，小花!\n```\n:::\n\n\n### 确定列表非空\n\n对于数值`0`，空值`None`，单引号空字符串`''`，双引号空字符串`\"\"`，空列表`[]`，空元组`()`，空字典`{}`，python都会返回False。\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-4_f0fcf09084f1f04d1bfbe5dc6205bcd8'}\n\n```{.python .cell-code}\nusers = []\n\nif users:\n    for i in users:\n        print(f\"欢迎光临,{i}!\")\nelse:\n    print(\"无人使用\")\n#>>> 无人使用\n```\n:::\n\n\n### 使用多个列表\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-5_9e5d22e3cde2809e77d2213640413515'}\n\n```{.python .cell-code}\ninvited = [\"A\",\"S\",\"D\",\"F\",\"G\",\"H\",\"J\",\"K\"]\npresent = [\"A\",\"F\",\"Z\",\"X\",\"K\",\"C\"]\n\nfor pre in present:\n    if pre in invited:\n        print(f\"欢迎您的到来，{pre}先生/女士！\")\n    else:\n        print(f\"抱歉，{pre}先生/女士，你没有请柬，无法进入。\")\n#>>> 欢迎您的到来，A先生/女士！\n#>>> 欢迎您的到来，F先生/女士！\n#>>> 抱歉，Z先生/女士，你没有请柬，无法进入。\n#>>> 抱歉，X先生/女士，你没有请柬，无法进入。\n#>>> 欢迎您的到来，K先生/女士！\n#>>> 抱歉，C先生/女士，你没有请柬，无法进入。\nprint(\"\\n 欢迎\")\n#>>> \n#>>>  欢迎\n```\n:::\n\n\n## while循环\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-6_cbf75c29fc2d87e88111c6fb808f262b'}\n\n```{.python .cell-code}\ni=0\nwhile i<=9:\n    print(i)\n    i=i+1\n#>>> 0\n#>>> 1\n#>>> 2\n#>>> 3\n#>>> 4\n#>>> 5\n#>>> 6\n#>>> 7\n#>>> 8\n#>>> 9\n```\n:::\n\n\n### 用户选择退出循环\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-7_5924266cf6d92db517783fc0523cf5b1'}\n\n```{.python .cell-code}\nprompt = \"\\n 输入一条消息，我将会复述一遍:\\n 输入 quit 结束程序。\"\nmessage = \"\"\nwhile message != 'quit':\n    message = input(prompt)\n    if message !='quit':\n        print(message)\n```\n:::\n\n\n### 使用标志flag\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-8_45cbb0806b61080931faef45b7a1f42e'}\n\n```{.python .cell-code}\nprompt = \"\\n 输入一条消息，我将会复述一遍:\\n 输入 quit 结束程序。\"\nactive = True\nwhile active:\n    message = input(prompt)\n    if message !='quit':\n        print(message)\n    else:\n        active =False\n```\n:::\n\n\n### 使用break退出循环\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-9_ab39b6dcfa862a7a96b7a24782d8dd6d'}\n\n```{.python .cell-code}\nprompt = \"\\n 输入一条消息，我将会复述一遍:\\n 输入 quit 结束程序。\"\nwhile True:\n    message = input(prompt)\n    if message !='quit':\n        print(message)\n    else:\n        break\n```\n:::\n\n\n### 在循环中使用continue\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-10_0fbca262965d3f6013d29b4a7136777d'}\n\n```{.python .cell-code}\ni=0\nwhile i <10:\n    i=i+1\n    if i%2 ==0:\n        continue\n    print(i)\n#>>> 1\n#>>> 3\n#>>> 5\n#>>> 7\n#>>> 9\n```\n:::\n\n\n### 使用while循环处理列表和字典\n\n#### 在列表之间移动元素\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-11_915362779758ca07b099832feea97600'}\n\n```{.python .cell-code}\n# 首先，创建一个待验证用户列表 \n# 和一个用于存储已验证用户的空列表\nunconfirmed_users = ['alice', 'brian', 'candace'] \nconfirmed_users = [] \n\n# 验证每个用户，直到没有未验证用户为止\n# 将每个经过验证的用户都移到已验证用户列表中\nwhile unconfirmed_users:\n    current_user = unconfirmed_users.pop() \n    print(f\"Verifying user: {current_user.title()}\")\n    confirmed_users.append(current_user) \n#>>> Verifying user: Candace\n#>>> Verifying user: Brian\n#>>> Verifying user: Alice\n    \n# 显示所有的已验证用户 \nprint(\"\\nThe following users have been confirmed:\") \n#>>> \n#>>> The following users have been confirmed:\nfor confirmed_user in confirmed_users: \n    print(confirmed_user.title())\n#>>> Candace\n#>>> Brian\n#>>> Alice\n```\n:::\n\n\n#### 删除所有特定值\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-12_f2a3d9c604a94dc598acfc7d4295128b'}\n\n```{.python .cell-code}\npets = ['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']\nprint(pets)\n#>>> ['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']\nwhile 'cat' in pets: \n    pets.remove('cat')\nprint(pets)\n#>>> ['dog', 'dog', 'goldfish', 'rabbit']\n```\n:::\n\n\n#### 让用户填充字典\n\n\n::: {.cell hash='control_structure_cache/html/unnamed-chunk-13_35dc183b809841794d5f91db51a24c0d'}\n\n```{.python .cell-code}\n# 调查程序\nresponses = {}\nflag = True\n\n\nwhile flag:\n    # 提示被调查者输入性名和回答,存储在字典中\n    name = input(\"\\n What is your name?\")\n    response = input(\"What is your favorite fruit?\")\n    responses[name] = response\n    \n    repeat = input(\"Whether to move on to the next person (yes/no)\")\n    if repeat == \"no\":\n        flag = False\n\nprint(\"\\n ---Results---\")\nfor i,j in responses.items():\n        print(f\"{i}'s favorite fruit is {j}.\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}