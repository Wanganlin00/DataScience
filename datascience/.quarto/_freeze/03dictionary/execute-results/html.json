{
  "hash": "ef64c8e8581614a27091986b7fc6ac7f",
  "result": {
    "markdown": "---\nknitr: \n  opts_chunk: \n    comment: \"#>>>\"\n    collapse: TRUE\nnumber-sections: true\ncode-fold: show\ncode-link: true\ncode-tools: true\n---\n\n\n# 字典\n\n字典（dictionary）是一系列***键值对***。每个***键***相关联的***值***可以是数、字符串、列表、元组乃至字典。\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-1_56e8a944203e0b4463b151a453473d6e'}\n\n```{.python .cell-code}\nalien_0 = {\"color\":\"green\",\"points\":5}\nalien_0\n#>>> {'color': 'green', 'points': 5}\n```\n:::\n\n\n## 操纵字典\n\n### 访问值\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-2_2e3b9c769edab6f07ffc49b51521380a'}\n\n```{.python .cell-code}\nalien_0[\"color\"]\n#>>> 'green'\nalien_0[\"points\"]\n#>>> 5\n```\n:::\n\n\n### 添加键值对\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-3_eb973556219fb5db472f863064b666b9'}\n\n```{.python .cell-code}\nalien_0[\"x\"] = 0\nalien_0[\"y\"] = 25\nalien_0\n#>>> {'color': 'green', 'points': 5, 'x': 0, 'y': 25}\n```\n:::\n\n\n### 从空字典开始\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-4_b947b6c3eace5d8099a4c4d2035770fd'}\n\n```{.python .cell-code}\nalien_0 = {}\nalien_0[\"color\"] = \"green\"\nalien_0[\"points\"] = 5\n\nalien_0\n#>>> {'color': 'green', 'points': 5}\n```\n:::\n\n\n### 修改\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-5_3beca835996c02f1aab526229776b812'}\n\n```{.python .cell-code}\nalien_0[\"color\"] =[ \"yellow\",\"red\",\"blue\"]\nalien_0\n#>>> {'color': ['yellow', 'red', 'blue'], 'points': 5}\n```\n:::\n\n\n### 删除\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-6_7fd19d6d5a8e335e2c0da58d1e902d99'}\n\n```{.python .cell-code}\nalien_0 = {\"color\":\"green\",\"points\":5}\n\ndel alien_0[\"points\"]\nalien_0\n#>>> {'color': 'green'}\n```\n:::\n\n\n### 由类似的对象组成的字典\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-7_7178a7b655331934f5219a695ab71611'}\n\n```{.python .cell-code}\nlike_language={\n    \"jen\":\"python\",\n    \"sarah\":\"c\",\n    \"edward\":\"r\",\n    \"phil\":\"python\",\n    }\nlike_language\n#>>> {'jen': 'python', 'sarah': 'c', 'edward': 'r', 'phil': 'python'}\n```\n:::\n\n\n### `get()`方法访问值\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-8_f692e70548dbb7c7b73386b42af91f1c'}\n\n```{.python .cell-code}\nalien_0[\"speed\"]\n#>>> Traceback (most recent call last):\n#>>>   File \"<string>\", line 1, in <module>\n#>>> KeyError: 'speed'\n```\n:::\n\n\nget()方法第一个参数用于指定键key，第二个参数为指定的键不存在时的返回值。\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-9_82b84f15b907ea46d8ff3bca05c9b029'}\n\n```{.python .cell-code}\nalien_0 = {\"color\":\"green\",\"points\":5}\nalien_0.get(\"color\")\n#>>> 'green'\nalien_0.get(\"speed\",\"Error,no existing\")\n#>>> 'Error,no existing'\n```\n:::\n\n\n## 遍历字典\n\n### 遍历所有键值对\n\n`Dict.items()`\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-10_e4e2d0ba7997ae934a296e31a5266978'}\n\n```{.python .cell-code}\nlike_language={\n    \"jen\":\"python\",\n    \"sarah\":\"c\",\n    \"edward\":\"r\",\n    \"phil\":\"python\",\n    }\nlike_language.items()\n#>>> dict_items([('jen', 'python'), ('sarah', 'c'), ('edward', 'r'), ('phil', 'python')])\n\nfor i,j in like_language.items():\n    print(f\"Key:{i}\")\n    print(f\"Value:{j}\")\n    print(f\"{i.title()}'s favorite language is {j.title()}.\\n\")\n#>>> Key:jen\n#>>> Value:python\n#>>> Jen's favorite language is Python.\n#>>> \n#>>> Key:sarah\n#>>> Value:c\n#>>> Sarah's favorite language is C.\n#>>> \n#>>> Key:edward\n#>>> Value:r\n#>>> Edward's favorite language is R.\n#>>> \n#>>> Key:phil\n#>>> Value:python\n#>>> Phil's favorite language is Python.\n```\n:::\n\n\n### 遍历所有键\n\n`Dict.keys()`\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-11_1785c59db3dbb606e2767fea9f7daeb7'}\n\n```{.python .cell-code}\nlike_language.keys()\n#>>> dict_keys(['jen', 'sarah', 'edward', 'phil'])\n\nfor i in like_language.keys():\n    print(f\"Key:{i.title()}\")\n#>>> Key:Jen\n#>>> Key:Sarah\n#>>> Key:Edward\n#>>> Key:Phil\n```\n:::\n\n\n::: callout-note\n默认遍历使用键\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-12_94c484459cc5ab610f92686bfd265458'}\n\n```{.python .cell-code}\nfor i in like_language: \n    print(f\"Key:{i.title()}\")\n#>>> Key:Jen\n#>>> Key:Sarah\n#>>> Key:Edward\n#>>> Key:Phil\n```\n:::\n\n:::\n\n### \n\n## 默认遍历键\n\nfor i in like_language: print(f\"Key:{i.title()}\")\n\n### 按特定顺序遍历所有键\n\n`sorted()函数`\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-13_04179bc4f0c576ad9d9a7f9a08a8e38b'}\n\n```{.python .cell-code}\nlike_language={\n    \"jen\":\"python\",\n    \"sarah\":\"c\",\n    \"edward\":\"r\",\n    \"phil\":\"python\",\n    }\nfor i in sorted(like_language.keys()):\n    print(i.title())\n#>>> Edward\n#>>> Jen\n#>>> Phil\n#>>> Sarah\n```\n:::\n\n\n### 遍历所有值\n\n`Dict.values()`\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-14_9be07eecd51a4d3c80c224fb24527e0c'}\n\n```{.python .cell-code}\nlike_language.values()\n#>>> dict_values(['python', 'c', 'r', 'python'])\nfor lan in like_language.values():\n    lan.title()\n#>>> 'Python'\n#>>> 'C'\n#>>> 'R'\n#>>> 'Python'\n```\n:::\n\n\n为剔除重复项，可使用集合`set()`函数。\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-15_7401568823e4a4d5c8263e9bfd4a4d38'}\n\n```{.python .cell-code}\nfor lan in set(like_language.values()):\n    lan.title()\n#>>> 'R'\n#>>> 'C'\n#>>> 'Python'\n```\n:::\n\n\n## 集合set\n\n::: callout-note\n集合的性质：互异性，无序性，确定性。\n\n可以使用一对花括号{}直接创建集合，用逗号分隔。\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-16_38576cc867e262ba990cf2297496850b'}\n\n```{.python .cell-code}\nlanguage_set = {\"python\",\"r\",\"c\"}\nlanguage_set\n#>>> {'r', 'c', 'python'}\n```\n:::\n\n:::\n\n## 嵌套\n\n### 字典列表\n\n列表的每个元素是一个字典\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-17_9b7cb8965e9a7399717897c252ec1fc3'}\n\n```{.python .cell-code}\nalien_0 = {'color': 'green', 'points': 5}\nalien_1 = {'color': 'yellow', 'points': 10} \nalien_2 = {'color': 'red', 'points': 15}\naliens = [alien_0, alien_1, alien_2] \nfor alien in aliens: \n    print(alien)\n#>>> {'color': 'green', 'points': 5}\n#>>> {'color': 'yellow', 'points': 10}\n#>>> {'color': 'red', 'points': 15}\n```\n:::\n\n\n### 在字典中存储列表\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-18_f4f8be4bd22bb280d13f9ac9a8f57c31'}\n\n```{.python .cell-code}\nr_object = {\n    \"num\":[1,2,3,4,5],\n    \"strings\":[\"qwe\",\"asd\",\"zxc\"],\n    \"bool\":[True,False],\n}\nr_object[\"num\"]\n#>>> [1, 2, 3, 4, 5]\n```\n:::\n\n\n### 在字典中存储字典\n\n\n::: {.cell hash='03dictionary_cache/html/unnamed-chunk-19_b3c4e89fbc289f0545e6b20a42bbe805'}\n\n```{.python .cell-code}\nemail = {\n    \"Tencent\":{\n        \"prefix\":\"3036683293\",\n        \"suffix\":\"@qq.com\",\n        \"state\":\"hardly\"\n    },\n    \"USTC\":{\n        \"prefix\":\"wangal00\",\n        \"suffix\":\"@mail.ustc.edu.cn\",\n        \"state\":\"usually\",\n    },\n    \"Microsoft\":{\n        \"prefix\":\"wanganlin00\",\n        \"suffix\":\"@outlook.com\",\n        \"state\":\"often\",\n    },\n    \"Google\":{\n        \"prefix\":\"wanganlin00\",\n        \"suffix\":\"@gmail.com\",\n        \"state\":\"can't\",\n    },\n}\nfor i,j in email.items():\n    print(f\"Belongs to {i}:\")\n    print(f'My email is {j[\"prefix\"]}{j[\"suffix\"]} , I {j[\"state\"]} use it.\\n')\n#>>> Belongs to Tencent:\n#>>> My email is 3036683293@qq.com , I hardly use it.\n#>>> \n#>>> Belongs to USTC:\n#>>> My email is wangal00@mail.ustc.edu.cn , I usually use it.\n#>>> \n#>>> Belongs to Microsoft:\n#>>> My email is wanganlin00@outlook.com , I often use it.\n#>>> \n#>>> Belongs to Google:\n#>>> My email is wanganlin00@gmail.com , I can't use it.\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}