{
  "hash": "fabe9c2db8a0b1e755c52658d63ad682",
  "result": {
    "markdown": "---\nknitr: \n  opts_chunk: \n    comment: \"#>>>\"\n    collapse: TRUE\nnumber-sections: true\ncode-fold: show\ncode-link: true\ncode-tools: true\n---\n\n\n# Basics\n\n# 写在前面\n\n在本书中，使用的集成开发环境（IDE）是Rstudio。\n\n在行文中， `code` 表示代码（code）\n\nR代码块中， `#>` 表示运行R代码输出的结果\n\nPython代码块中， `#>>>` 表示运行Python代码输出的结果\n\n## 环境配置\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-1_75d72aac8efb1e59bbc668176ad4cfd0'}\n\n```{.r .cell-code}\n### 环境配置\nsessioninfo::session_info()\n#> ─ Session info ───────────────────────────────────────────────────────────────\n#>  setting  value\n#>  version  R version 4.3.2 (2023-10-31 ucrt)\n#>  os       Windows 10 x64 (build 19045)\n#>  system   x86_64, mingw32\n#>  ui       RTerm\n#>  language en\n#>  collate  Chinese (Simplified)_China.utf8\n#>  ctype    Chinese (Simplified)_China.utf8\n#>  tz       Asia/Shanghai\n#>  date     2024-02-29\n#>  pandoc   3.1.1 @ D:/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n#> \n#> ─ Packages ───────────────────────────────────────────────────────────────────\n#>  package     * version    date (UTC) lib source\n#>  BiocManager * 1.30.22    2023-08-08 [1] CRAN (R 4.3.2)\n#>  cachem        1.0.8      2023-05-01 [1] CRAN (R 4.3.2)\n#>  cellranger    1.1.0      2016-07-27 [1] CRAN (R 4.3.2)\n#>  cli           3.6.2      2023-12-11 [1] CRAN (R 4.3.2)\n#>  colorspace    2.1-0      2023-01-23 [1] CRAN (R 4.3.1)\n#>  conflicted  * 1.2.0.9000 2023-11-26 [1] Github (r-lib/conflicted@321d77c)\n#>  digest        0.6.34     2024-01-11 [1] CRAN (R 4.3.2)\n#>  dplyr       * 1.1.4      2023-11-17 [1] CRAN (R 4.3.2)\n#>  evaluate      0.23       2023-11-01 [1] CRAN (R 4.3.2)\n#>  fansi         1.0.6      2023-12-08 [1] CRAN (R 4.3.2)\n#>  fastmap       1.1.1      2023-02-24 [1] CRAN (R 4.3.2)\n#>  forcats     * 1.0.0      2023-01-29 [1] CRAN (R 4.3.2)\n#>  generics      0.1.3      2022-07-05 [1] CRAN (R 4.3.2)\n#>  ggplot2     * 3.4.4      2023-10-12 [1] CRAN (R 4.3.2)\n#>  glue          1.7.0      2024-01-09 [1] CRAN (R 4.3.2)\n#>  gtable        0.3.4      2023-08-21 [1] CRAN (R 4.3.2)\n#>  hms           1.1.3      2023-03-21 [1] CRAN (R 4.3.2)\n#>  htmltools     0.5.7      2023-11-03 [1] CRAN (R 4.3.2)\n#>  htmlwidgets   1.6.4      2023-12-06 [1] CRAN (R 4.3.2)\n#>  jsonlite      1.8.8      2023-12-04 [1] CRAN (R 4.3.2)\n#>  knitr         1.45       2023-10-30 [1] CRAN (R 4.3.2)\n#>  lifecycle     1.0.4      2023-11-07 [1] CRAN (R 4.3.2)\n#>  lubridate   * 1.9.3      2023-09-27 [1] CRAN (R 4.3.2)\n#>  magrittr      2.0.3      2022-03-30 [1] CRAN (R 4.3.2)\n#>  memoise       2.0.1      2021-11-26 [1] CRAN (R 4.3.2)\n#>  munsell       0.5.0      2018-06-12 [1] CRAN (R 4.3.2)\n#>  patchwork   * 1.2.0      2024-01-08 [1] CRAN (R 4.3.2)\n#>  pillar        1.9.0      2023-03-22 [1] CRAN (R 4.3.2)\n#>  pkgconfig     2.0.3      2019-09-22 [1] CRAN (R 4.3.2)\n#>  purrr       * 1.0.2      2023-08-10 [1] CRAN (R 4.3.2)\n#>  R6            2.5.1      2021-08-19 [1] CRAN (R 4.3.2)\n#>  readr       * 2.1.5      2024-01-10 [1] CRAN (R 4.3.2)\n#>  readxl      * 1.4.3      2023-07-06 [1] CRAN (R 4.3.2)\n#>  rlang         1.1.3      2024-01-10 [1] CRAN (R 4.3.2)\n#>  rmarkdown     2.25       2023-09-18 [1] CRAN (R 4.3.2)\n#>  rstudioapi    0.15.0     2023-07-07 [1] CRAN (R 4.3.2)\n#>  scales        1.3.0      2023-11-28 [1] CRAN (R 4.3.2)\n#>  sessioninfo   1.2.2      2021-12-06 [1] CRAN (R 4.3.2)\n#>  stringi       1.8.3      2023-12-11 [1] CRAN (R 4.3.2)\n#>  stringr     * 1.5.1      2023-11-14 [1] CRAN (R 4.3.2)\n#>  tibble      * 3.2.1      2023-03-20 [1] CRAN (R 4.3.2)\n#>  tidyr       * 1.3.0      2023-01-24 [1] CRAN (R 4.3.2)\n#>  tidyselect    1.2.0      2022-10-10 [1] CRAN (R 4.3.2)\n#>  tidyverse   * 2.0.0      2023-02-22 [1] CRAN (R 4.3.2)\n#>  timechange    0.2.0      2023-01-11 [1] CRAN (R 4.3.2)\n#>  tzdb          0.4.0      2023-05-12 [1] CRAN (R 4.3.2)\n#>  utf8          1.2.4      2023-10-22 [1] CRAN (R 4.3.2)\n#>  vctrs         0.6.5      2023-12-01 [1] CRAN (R 4.3.2)\n#>  withr         2.5.2      2023-10-30 [1] CRAN (R 4.3.2)\n#>  writexl     * 1.4.2      2023-01-06 [1] CRAN (R 4.3.2)\n#>  xfun          0.41       2023-11-01 [1] CRAN (R 4.3.2)\n#>  yaml          2.3.8      2023-12-11 [1] CRAN (R 4.3.2)\n#> \n#>  [1] D:/R-4.3.2/library\n#> \n#> ──────────────────────────────────────────────────────────────────────────────\n```\n:::\n\n\n## **在 R Console 中交互式运行 Python**\n\n-   `reticulate::repl_python ()` 进入 Python 环境\n\n-   `exit / quit` 退出 Python 环境\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-2_a9e04f088d6485648fbbf974d5cd1aaf'}\n\n```{.r .cell-code}\nlibrary(reticulate)\n# py_config()\n\n### miniconda 环境\n#> install_miniconda() \n#> miniconda_path()\n#> miniconda_update()\n\n### 进入Python环境\nreticulate::repl_python()\n```\n:::\n\n\n# pip\n\nPython package index（pypi） 是一个Python编程语言的软件库。\n\n**命令框 cmd**\n\n![](pip-command-options.jpg){fig-align=\"center\"}\n\n+--------------------------------------------------------------------+--------------------------+\n| pip \\<command\\> \\[options\\]                                        |                          |\n+====================================================================+==========================+\n| pip install \\<module\\>                                             | install packages         |\n|                                                                    |                          |\n| pip install -i https://pypi.tuna.tsinghua.edu.cn/simple/\\<module\\> |                          |\n+--------------------------------------------------------------------+--------------------------+\n| pip uninstall \\<module\\>                                           |                          |\n+--------------------------------------------------------------------+--------------------------+\n| pip list                                                           |                          |\n+--------------------------------------------------------------------+--------------------------+\n| pip \\--version                                                     | Show version and exit    |\n|                                                                    |                          |\n| pip -V                                                             |                          |\n+--------------------------------------------------------------------+--------------------------+\n| python -m pip install \\--upgrade pip                               | install and uptate pip   |\n+--------------------------------------------------------------------+--------------------------+\n| pip install virtualenv                                             | 安装虚拟环境             |\n+--------------------------------------------------------------------+--------------------------+\n| python -m venv venv                                                | 在项目目录中创建虚拟环境 |\n+--------------------------------------------------------------------+--------------------------+\n| Windows: venv\\Scripts\\activate                                     | 激活虚拟环境             |\n+--------------------------------------------------------------------+--------------------------+\n\n# 变量和数据类型\n\n## 变量variable\n\n规则：\n\n-   变量名只能包含字母、数字、下划线、中文字符等，不能包含空格，且能以字母或下划线打头，不能以数字打头。\n-   不要用Python关键字和函数名作为变量名。\n-   变量名具有描述性。\n\n创建一个名为`message`的变量（variable），`\"Hello python world!\"`是变量指向的值（value）。\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-3_a783d94980d0a2b59f75768e6a61da21'}\n\n```{.python .cell-code}\nmessage = \"Hello python world!\" \n\n# 直接打印 或 print()\nmessage\n#>>> 'Hello python world!'\nprint(message)\n#>>> Hello python world!\n```\n:::\n\n\n修改变量值\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-4_7667a02e61d794b2929722b3409f7476'}\n\n```{.python .cell-code}\nmessage = \"Hello python Interpreter\"\nprint(message)\n#>>> Hello python Interpreter\n```\n:::\n\n\n## 字符串string\n\n用引号引起的是字符串，其中引号既可以是双引号，也可以是单引号。\n\n\n::: {.cell hash='01basics_cache/html/string_f24e3c7fdadf29039ad8580474b147e3'}\n\n```{.python .cell-code}\n\"This is a string\"\n#>>> 'This is a string'\n'This is also a string'\n#>>> 'This is also a string'\n\"他说'世界是你们的，也是我们的，但终究是你们的'。流泪\\u1000\"\n#>>> \"他说'世界是你们的，也是我们的，但终究是你们的'。流泪က\"\n```\n:::\n\n\n### 使用方法method修改字符串\n\n例如，在函数调用`print()`中，方法 `title()` 出现在变量名后面。\n\nmethod是Python对数据执行的操作，在`name.title()`中，`name`是变量名，句点`.`让Python对name变量执行方法`title()`指定的操作。\n\n\n::: {.cell hash='01basics_cache/html/method_940f8f4fd62bfff8ded1bfca37a85475'}\n\n```{.python .cell-code}\nname = \"ada lovelace\"\nname\n#>>> 'ada lovelace'\nprint(name)\n#>>> ada lovelace\nprint(name.title())\n#>>> Ada Lovelace\nprint(name.upper())\n#>>> ADA LOVELACE\nprint(name.lower())\n#>>> ada lovelace\nname\n#>>> 'ada lovelace'\n```\n:::\n\n\n| method            | 作用                           |\n|-------------------|--------------------------------|\n| `title()`         | 以首字母大写的方式显示每个单词 |\n| `upper()`         | 使字母全大写                   |\n| `lower()`         | 使字母全小写                   |\n| `strip()`         | 删除左右空白                   |\n| `rstrip()`        | 删除右空白                     |\n| `lstrip()`        | 删除左空白                     |\n| `removeprefix(x)` | 删除前缀x                      |\n\n: method\n\n### 在字符串中使用变量\n\n**f字符串**，在左`\"`之前添加字母`f` （format设置格式），再将变量名放入`{}`内。\n\n\n::: {.cell hash='01basics_cache/html/f_string_22643f14ff7f6ca168d2e51eb2190fd7'}\n\n```{.python .cell-code}\nfirst_name = \"ada\"\nlast_name = \"lovelace\"\nfull_name = f\"{first_name} {last_name}\"\nprint(full_name)\n#>>> ada lovelace\nprint(f\"Hello,{full_name.title()}!\")\n#>>> Hello,Ada Lovelace!\ngreet = f\"Hello,{full_name.title()}!\"\nprint(greet)\n#>>> Hello,Ada Lovelace!\n\nname = \"Eric\"\nmessage = f\"Hello {name},would you like to learn some Python today?\"\nmessage\n#>>> 'Hello Eric,would you like to learn some Python today?'\n```\n:::\n\n\n### 使用制表符或换行符添加空白\n\n**空白**泛指任何非打印字符，如空格、制表符、换行符。\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-5_286417152916e59c8750c36a2f3f0ccb'}\n\n```{.python .cell-code}\nprint(\"Python\")\n#>>> Python\nprint(\"\\tPython\")\n#>>> \tPython\nprint(\"Languages:\\n\\t1.Python\\n\\t2.R\\n\\t3.C\")\n#>>> Languages:\n#>>> \t1.Python\n#>>> \t2.R\n#>>> \t3.C\n```\n:::\n\n\n### 删除空白\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-6_e808b2e0c442868b0816e7b445a74e8e'}\n\n```{.python .cell-code}\nlanguage = \" python \"\nlanguage\n#>>> ' python '\n#删除右空白\nlanguage.rstrip()\n#>>> ' python'\n\n#删除左空白\nlanguage.lstrip()\n#>>> 'python '\n\n#删除左右空白\nlanguage.strip()\n#>>> 'python'\n```\n:::\n\n\n但这种删除是暂时的\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-7_0a5f2946ef3ffd2714cbc32415e0682f'}\n\n```{.python .cell-code}\nlanguage\n#>>> ' python '\n```\n:::\n\n\n### 删除前后缀\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-8_867f314a128c36d928d6f6c2bfdb15a9'}\n\n```{.python .cell-code}\ngithub_url = \"https://github.com\"\ngithub_url.removeprefix(\"https://\")\n#>>> 'github.com'\n\nfile = \"basics.txt\"\nfile.removesuffix(\".txt\")\n#>>> 'basics'\n```\n:::\n\n\n## 数number\n\n### 整数integer\n\n可执行加`+`、减`-`、乘`*`、除`/`、整除`//`、乘方`**`、求模（取余数） `%` 运算。\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-9_99cb913a301d9abd713db67c0d2c40fa'}\n\n```{.python .cell-code}\n2+3\n#>>> 5\n5-2\n#>>> 3\n2*3\n#>>> 6\n8/2\n#>>> 4.0\n8//2\n#>>> 4\n9//2\n#>>> 4\n5**2\n#>>> 25\n10%3\n#>>> 1\nprint(5+3)\n#>>> 8\nprint(9-1)\n#>>> 8\nprint(4*2)\n#>>> 8\nprint(16//2)\n#>>> 8\nprint(2**3)\n#>>> 8\n```\n:::\n\n\n### 浮点数float\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-10_9fdaf5167c8705cc7590bdb4bfaf9722'}\n\n```{.python .cell-code}\n0.2+0.5\n#>>> 0.7\n2*0.4\n#>>> 0.8\n0.2+0.1\n#>>> 0.30000000000000004\n3*0.1\n#>>> 0.30000000000000004\n\n4/2\n#>>> 2.0\n1+2.0\n#>>> 3.0\n3.0**2\n#>>> 9.0\n```\n:::\n\n\n### 数中的下划线\n\n位数分组\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-11_9d50ff8b37cc8ac7355767a72207e233'}\n\n```{.python .cell-code}\nx = 14_000_000_000\nx\n#>>> 14000000000\n```\n:::\n\n\n### 同时给多个变量赋值\n\n用逗号分隔\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-12_155fa4800abf83f82eb2a7a4af4682ac'}\n\n```{.python .cell-code}\nx,y,z = 1,2.0,4**2\nx\n#>>> 1\ny\n#>>> 2.0\nz\n#>>> 16\n```\n:::\n\n\n常量constant\n\n变量名全大写字母表示常量。\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-13_d79195c8f280cf429d1ed31f18751a9b'}\n\n```{.python .cell-code}\nFAVORITE_NUMBER = 9\nmessage = f\"My favorite number is {FAVORITE_NUMBER}\"\nprint(message)\n#>>> My favorite number is 9\n```\n:::\n\n\n## Python原则\n\n\n::: {.cell hash='01basics_cache/html/unnamed-chunk-14_8d3513a5bd3891dda97ecd2f86d6f10f'}\n\n```{.python .cell-code}\nimport this\n#>>> The Zen of Python, by Tim Peters\n#>>> \n#>>> Beautiful is better than ugly.\n#>>> Explicit is better than implicit.\n#>>> Simple is better than complex.\n#>>> Complex is better than complicated.\n#>>> Flat is better than nested.\n#>>> Sparse is better than dense.\n#>>> Readability counts.\n#>>> Special cases aren't special enough to break the rules.\n#>>> Although practicality beats purity.\n#>>> Errors should never pass silently.\n#>>> Unless explicitly silenced.\n#>>> In the face of ambiguity, refuse the temptation to guess.\n#>>> There should be one-- and preferably only one --obvious way to do it.\n#>>> Although that way may not be obvious at first unless you're Dutch.\n#>>> Now is better than never.\n#>>> Although never is often better than *right* now.\n#>>> If the implementation is hard to explain, it's a bad idea.\n#>>> If the implementation is easy to explain, it may be a good idea.\n#>>> Namespaces are one honking great idea -- let's do more of those!\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}