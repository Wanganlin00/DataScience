{"title":"函数","markdown":{"yaml":{"knitr":{"opts_chunk":{"comment":"#>>>","collapse":true}},"number-sections":true,"code-fold":"show","code-link":true,"code-tools":true},"headingText":"函数","containsRefs":false,"markdown":"\n\n\n## 定义函数\n\n### 传参\n\n```{python}\ndef greet_user(username):\n    \"\"\"文档字符串（docstring）\"\"\"\n    print(f\"Hello,{username.title()}\")\n\ngreet_user(\"lily\")\n```\n\n### 形参（parameter）和实参（argument）\n\n形参即函数完成任务所需要的信息，例如`greet_user(username)`中的`username`。\n\n实参即在调用call 函数时传递给函数的信息，例如`greet_user(\"lily\")`中的`\"lily\"`。\n\n位置实参 关键字实参 \n默认值，在给形参指定默认值时，等号两边不要出现空格，函数调用中的关键字实参也遵循这种约定。\n\n## 返回值\n\n### 返回字典\n\n实参可选\n\n```{python}\ndef get_formatted_name(first_name, last_name, middle_name=''):\n    \"\"\"返回标准格式的姓名\"\"\"\n    if middle_name: \n        full_name = f\"{first_name} {middle_name} {last_name}\"\n    else: \n        full_name = f\"{first_name} {last_name}\" \n    return full_name.title() \n\nmusician = get_formatted_name('jimi', 'hendrix') \nprint(musician) \nmusician = get_formatted_name('john', 'hooker', 'lee') \nprint(musician)\n```\n\n```{python}\ndef build_person(first_name,last_name,age=None):\n    \"\"\" 返回字典，其中包含姓名或年龄\"\"\"\n    person = {\"first\": first_name,\"last\":last_name}\n    \n    if age:\n        person[\"age\"] = age\n    return person\nmusician = build_person('jimi', 'hendrix',27) \nprint(musician) \n```\n\n## 传递列表\n\n```{python}\n# 函数\ndef print_models(unprinted_designs, completed_models): \n    \"\"\" 模拟打印每个设计，直到没有未打印的设计为止\n    打印每个设计后，都将其移到列表 completed_models 中 \"\"\" \n    while unprinted_designs: \n        current_design = unprinted_designs.pop() \n        print(f\"Printing model: {current_design}\") \n        completed_models.append(current_design)\n        \ndef show_completed_models(completed_models): \n    \"\"\"显示打印好的所有模型\"\"\" \n    print(\"\\nThe following models have been printed:\") \n    for completed_model in completed_models: \n        print(completed_model) \n\n# 主程序\nunprinted_designs = ['phone case', 'robot pendant', 'dodecahedron']\ncompleted_models = [] \n\nprint_models(unprinted_designs, completed_models) \nshow_completed_models(completed_models)\n\nunprinted_designs\ncompleted_models\n\n# 主程序 使用列表副本\nunprinted_designs = ['phone case', 'robot pendant', 'dodecahedron']\ncompleted_models = [] \n\nprint_models(unprinted_designs[:], completed_models) \nshow_completed_models(completed_models)\n\nunprinted_designs\ncompleted_models\n```\n\n## 传递任意数量的实参\n\n```{python}\ndef make_pizza(*toppings):\n    \"\"\"打印顾客点的所有配料\"\"\"\n    print(toppings)\n    return toppings\ntps = make_pizza(\"qwe\",\"asd\",\"zxc\")\n```\n\nPython先匹配位置实参和关键字实参，再将剩余的实参匹配到最后一个形参。`*toppings` 中的星号 `*` 创建一个名为 `toppings` 的元组。\n\n`**user_info`中的两个星号 `**` 创建一个名为`user_info`的字典，接收任意数量的关键字实参\n\n```{python}\ndef build_profile(first, last, **user_info):\n    \"\"\"创建一个字典，其中包含我们知道的有关用户的一切\"\"\"\n    user_info['first_name'] = first \n    user_info['last_name'] = last \n    return user_info \n\nuser_profile = build_profile('albert', 'einstein', location='princeton', field='physics') \nprint(user_profile)\n```\n\n## 模块module\n## 导入整个模块\n```\nimport module_name\nmodule_name.function_name()\n\n```\n## 使用as给模块指定别名\n```\nimport module_name as mn\nmn.function_name()\n```\n## 导入特定函数\n```\nfrom module_name import function_name\nfunction_name()\n```\n## 使用as给函数指定别名\n```\nfrom module_name import function_name as fn\nfn()\n```\n## 使用* 导入模块中使用函数\n不建议，同名覆盖\n```\nfrom module_name import *\n```\n","srcMarkdownNoYaml":"\n\n# 函数\n\n## 定义函数\n\n### 传参\n\n```{python}\ndef greet_user(username):\n    \"\"\"文档字符串（docstring）\"\"\"\n    print(f\"Hello,{username.title()}\")\n\ngreet_user(\"lily\")\n```\n\n### 形参（parameter）和实参（argument）\n\n形参即函数完成任务所需要的信息，例如`greet_user(username)`中的`username`。\n\n实参即在调用call 函数时传递给函数的信息，例如`greet_user(\"lily\")`中的`\"lily\"`。\n\n位置实参 关键字实参 \n默认值，在给形参指定默认值时，等号两边不要出现空格，函数调用中的关键字实参也遵循这种约定。\n\n## 返回值\n\n### 返回字典\n\n实参可选\n\n```{python}\ndef get_formatted_name(first_name, last_name, middle_name=''):\n    \"\"\"返回标准格式的姓名\"\"\"\n    if middle_name: \n        full_name = f\"{first_name} {middle_name} {last_name}\"\n    else: \n        full_name = f\"{first_name} {last_name}\" \n    return full_name.title() \n\nmusician = get_formatted_name('jimi', 'hendrix') \nprint(musician) \nmusician = get_formatted_name('john', 'hooker', 'lee') \nprint(musician)\n```\n\n```{python}\ndef build_person(first_name,last_name,age=None):\n    \"\"\" 返回字典，其中包含姓名或年龄\"\"\"\n    person = {\"first\": first_name,\"last\":last_name}\n    \n    if age:\n        person[\"age\"] = age\n    return person\nmusician = build_person('jimi', 'hendrix',27) \nprint(musician) \n```\n\n## 传递列表\n\n```{python}\n# 函数\ndef print_models(unprinted_designs, completed_models): \n    \"\"\" 模拟打印每个设计，直到没有未打印的设计为止\n    打印每个设计后，都将其移到列表 completed_models 中 \"\"\" \n    while unprinted_designs: \n        current_design = unprinted_designs.pop() \n        print(f\"Printing model: {current_design}\") \n        completed_models.append(current_design)\n        \ndef show_completed_models(completed_models): \n    \"\"\"显示打印好的所有模型\"\"\" \n    print(\"\\nThe following models have been printed:\") \n    for completed_model in completed_models: \n        print(completed_model) \n\n# 主程序\nunprinted_designs = ['phone case', 'robot pendant', 'dodecahedron']\ncompleted_models = [] \n\nprint_models(unprinted_designs, completed_models) \nshow_completed_models(completed_models)\n\nunprinted_designs\ncompleted_models\n\n# 主程序 使用列表副本\nunprinted_designs = ['phone case', 'robot pendant', 'dodecahedron']\ncompleted_models = [] \n\nprint_models(unprinted_designs[:], completed_models) \nshow_completed_models(completed_models)\n\nunprinted_designs\ncompleted_models\n```\n\n## 传递任意数量的实参\n\n```{python}\ndef make_pizza(*toppings):\n    \"\"\"打印顾客点的所有配料\"\"\"\n    print(toppings)\n    return toppings\ntps = make_pizza(\"qwe\",\"asd\",\"zxc\")\n```\n\nPython先匹配位置实参和关键字实参，再将剩余的实参匹配到最后一个形参。`*toppings` 中的星号 `*` 创建一个名为 `toppings` 的元组。\n\n`**user_info`中的两个星号 `**` 创建一个名为`user_info`的字典，接收任意数量的关键字实参\n\n```{python}\ndef build_profile(first, last, **user_info):\n    \"\"\"创建一个字典，其中包含我们知道的有关用户的一切\"\"\"\n    user_info['first_name'] = first \n    user_info['last_name'] = last \n    return user_info \n\nuser_profile = build_profile('albert', 'einstein', location='princeton', field='physics') \nprint(user_profile)\n```\n\n## 模块module\n## 导入整个模块\n```\nimport module_name\nmodule_name.function_name()\n\n```\n## 使用as给模块指定别名\n```\nimport module_name as mn\nmn.function_name()\n```\n## 导入特定函数\n```\nfrom module_name import function_name\nfunction_name()\n```\n## 使用as给函数指定别名\n```\nfrom module_name import function_name as fn\nfn()\n```\n## 使用* 导入模块中使用函数\n不建议，同名覆盖\n```\nfrom module_name import *\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":6,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"kable","error":true,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":4,"number-sections":true,"html-math-method":"katex","output-file":"function.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","bibliography":["references.bib"],"toc-expand":true,"toc-location":"right","knitr":{"opts_chunk":{"comment":"#>>>","collapse":true}},"crossref":{"fig-title":"图","fig-prefix":"图","tbl-title":"表","tbl-prefix":"表"},"fig-asp":0.618,"editor":"visual","theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}